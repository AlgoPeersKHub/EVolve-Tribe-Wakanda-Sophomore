import machine
import time

# Define pin for the Hall effect sensor
hall_pin = machine.Pin(14, machine.Pin.IN, machine.Pin.PULL_UP)  # Example pin, adjust as necessary

# Constants
CIRCUMFERENCE = 0.2  # Circumference of the circle described by the cups in meters
SECONDS_PER_MINUTE = 60  # Number of seconds in a minute

def calculate_wind_speed(pulse_count, time_interval):
    rotations_per_second = pulse_count / time_interval
    wind_speed_mps = rotations_per_second * CIRCUMFERENCE
    return wind_speed_mps

def main():
    pulse_count = 0
    last_time = time.time()

    while True:
        # Read state of the Hall effect sensor
        hall_state = hall_pin.value()
        
        # If the state has changed (i.e., a magnet passed by)
        if hall_state == 0:  # Assuming the sensor is triggered by a falling edge
            pulse_count += 1
        
        # Measure time elapsed
        current_time = time.time()
        time_interval = current_time - last_time
        
        # Update last time
        last_time = current_time
        
        # Calculate wind speed every minute
        if time_interval >= SECONDS_PER_MINUTE:
            wind_speed = calculate_wind_speed(pulse_count, time_interval)
            print("Wind Speed: {:.2f} m/s".format(wind_speed))
            
            # Reset pulse count and timer
            pulse_count = 0
            last_time = time.time()
            
        time.sleep(0.1)  # Adjust sleep time as necessary to avoid high CPU usage

if __name__ == "__main__":
    main()
